generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model assets {
  id                                       BigInt          @id @default(autoincrement())
  input_prompt_id                          BigInt?
  output_prompt_id                         BigInt?
  asset_type                               asset_type
  asset_source                             asset_source
  uri                                      String
  metadata                                 Json?
  created_by                               String
  updated_by                               String
  created_at                               DateTime        @default(now()) @db.Timestamptz(6)
  updated_at                               DateTime        @default(now()) @db.Timestamptz(6)
  prompts_assets_input_prompt_idToprompts  prompts?        @relation("assets_input_prompt_idToprompts", fields: [input_prompt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prompts_assets_output_prompt_idToprompts prompts?        @relation("assets_output_prompt_idToprompts", fields: [output_prompt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  civitai_posts                            civitai_posts[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model civitai_post_associations {
  id               BigInt           @id @default(autoincrement())
  post_id          BigInt
  association_id   BigInt
  association_type association_type
  created_by       String
  updated_by       String
  created_at       DateTime         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime         @default(now()) @db.Timestamptz(6)
  civitai_posts    civitai_posts    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model civitai_posts {
  id                        BigInt                      @id @default(autoincrement())
  asset_id                  BigInt?
  asset_type                asset_type?
  title                     String?
  description               String?
  civitai_id                String
  civitai_url               String
  status                    post_status
  metadata                  Json?
  created_by                String
  updated_by                String
  created_at                DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                    @default(now()) @db.Timestamptz(6)
  civitai_post_associations civitai_post_associations[]
  assets                    assets?                     @relation(fields: [asset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model events {
  id          BigInt   @id @default(autoincrement())
  occurred_at DateTime @default(now()) @db.Timestamptz(6)
  actor       String
  table_name  String
  op          String
  row_id      BigInt
  old_data    Json?
  new_data    Json?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prompts {
  id                                      BigInt   @id @default(autoincrement())
  content                                 String
  llm_model_provider                      String?
  llm_model                               String?
  purpose                                 String?
  metadata                                Json?
  created_by                              String
  updated_by                              String
  created_at                              DateTime @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime @default(now()) @db.Timestamptz(6)
  assets_assets_input_prompt_idToprompts  assets[] @relation("assets_input_prompt_idToprompts")
  assets_assets_output_prompt_idToprompts assets[] @relation("assets_output_prompt_idToprompts")
}

enum asset_source {
  generated
  upload
}

enum asset_type {
  image
  video
}

enum association_type {
  asset
  prompt
}

enum post_status {
  pending
  published
  failed
}
